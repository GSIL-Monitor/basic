<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="com.wgb.controller"/>

    <!-- 统一的异常处理类 ExceptionHandler -->
    <bean class="com.wgb.interceptor.ExceptionHandler"/>

    <!-- 注解依赖的适配器 AnnotationMethodHandlerAdapter -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- Spring JSON 格式转换依赖的Jar -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable
            representation -->
        <property name="supportedMediaTypes">
            <list>
                <value>application/json</value>
                <value>text/json</value>
            </list>
        </property>
    </bean>

    <!-- 注解依赖的适配器 DefaultAnnotationHandlerMapping -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <list>

                <!-- 响应监控拦截器 -->
                <bean id="resMonitorInterceptor" class="com.wgb.interceptor.ResMonitorInterceptor"/>

                <!-- 权限过滤拦截器 -->
                <bean id="authInterceptor" class="com.wgb.interceptor.AuthInterceptor">
                    <property name="processors">
                        <list>
                            <bean class="com.wgb.interceptor.processor.impl.MTPCProcessor">
                                <property name="path" value="/mt/web/"/>
                                <property name="sign" value="ls"/>
                            </bean>
                            <bean class="com.wgb.interceptor.processor.impl.MTPOSProcessor">
                                <property name="path" value="/mt/pos/"/>
                                <property name="sign" value="pos"/>
                            </bean>
                            <bean class="com.wgb.interceptor.processor.impl.MBWXProcessor">
                                <property name="path" value="/mb/wx/"/>
                                <property name="sign" value="wxsc"/>
                            </bean>
                            <bean class="com.wgb.interceptor.processor.impl.MBXCXProcessor">
                                <property name="path" value="/mb/xcx/"/>
                                <property name="sign" value="xcx"/>
                            </bean>
                            <bean class="com.wgb.interceptor.processor.impl.MTBOSSProcessor">
                                <property name="path" value="/mt/boss/"/>
                                <property name="sign" value="boss"/>
                            </bean>
                            <bean class="com.wgb.interceptor.processor.impl.SCPPCProcessor">
                                <property name="path" value="/scp/web/"/>
                                <property name="sign" value="gyl"/>
                            </bean>
                            <bean class="com.wgb.interceptor.processor.impl.SCPXCXProcessor">
                                <property name="path" value="/scp/xcx/"/>
                                <property name="sign" value="xgyl"/>
                            </bean>
                            <bean class="com.wgb.interceptor.processor.impl.SGXCXProcessor">
                                <property name="path" value="/sg/xcx/"/>
                                <property name="sign" value="sgms"/>
                            </bean>
                            <bean class="com.wgb.interceptor.processor.impl.MTGoodsHelpProcessor">
                                <property name="path" value="/mt/goods/"/>
                                <property name="sign" value="goods"/>
                            </bean>
                            <bean class="com.wgb.interceptor.processor.impl.SPPCProcessor">
                                <property name="path" value="/fws/web/"/>
                                <property name="sign" value="fws"/>
                            </bean>
                            <bean class="com.wgb.interceptor.processor.impl.LMXCXProcessor">
                                <property name="path" value="/lms/xcx/"/>
                                <property name="sign" value="lms"/>
                            </bean>
                        </list>
                    </property>
                </bean>

                <!-- 流量监控拦截器 -->
                <!--<bean id="cameraInterceptor" class="com.wgb.interceptor.CameraInterceptor" />-->
            </list>
        </property>
    </bean>

    <!-- Spring @AutoWired 依赖自动注入,不需要setter方法 -->
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <!-- FreeMarker视图解析器 -->
    <bean id="freemarkerResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <!--<property name="cache" value="true"/> -->
        <property name="order" value="1"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="requestContextAttribute" value="request"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="allowSessionOverride" value="true"/>
        <property name="contentType" value="text/html;charset=utf-8"/>
        <!--编码 -->
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
    </bean>

    <bean id="blockDirective" class="cn.org.rapid_framework.freemarker.directive.BlockDirective"/>
    <bean id="extendsDirective" class="cn.org.rapid_framework.freemarker.directive.ExtendsDirective"/>
    <bean id="overrideDirective" class="cn.org.rapid_framework.freemarker.directive.OverrideDirective"/>
    <bean id="superDirective" class="cn.org.rapid_framework.freemarker.directive.SuperDirective"/>

    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <description>Required for Freemarker to work in web tier</description>
        <property name="configuration" ref="freemarkerConfiguration"/>
    </bean>

    <bean id="freemarkerConfiguration"
          class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <description>Using the Config directly so we can use it outside the
            web tier
        </description>
        <!-- 模板加载路径 -->
        <property name="templateLoaderPaths" value="/WEB-INF/ftl/"/>
        <property name="defaultEncoding" value="utf-8"/>
        <property name="freemarkerVariables">
            <map>
                <!--下面四个是实现freemarker模板的继承功能-->
                <entry key="extends" value-ref="extendsDirective"/>
                <entry key="override" value-ref="overrideDirective"/>
                <entry key="block" value-ref="blockDirective"/>
                <entry key="super" value-ref="superDirective"/>
                <!-- 自定义菜单标签 -->
            </map>
        </property>
    </bean>

    <!-- 支持上传文件 -->
    <bean id="multipartResolver" class="com.wgb.util.MultiParseFile">
        <!-- 200M -->
        <property name="maxUploadSize">
            <value>209715200</value>
        </property>
        <property name="maxInMemorySize">
            <value>204800</value>
        </property>
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>

</beans>