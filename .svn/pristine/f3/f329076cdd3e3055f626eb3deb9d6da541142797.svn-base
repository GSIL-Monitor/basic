package com.wgb.controller.mt.purchase;

import com.wgb.bean.ZLResult;
import com.wgb.controller.mt.MTBaseController;
import com.wgb.dubbo.ZLRpcResult;
import com.wgb.exception.ServiceException;
import com.wgb.service.dubbo.stms.web.ApitPurchaseSupplierRegionService;
import com.wgb.util.ExcelUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.List;
import java.util.Map;

/**
 * Created by wgy on 2018/4/19.
 */
@Controller
@RequestMapping("/supplier/region")
public class MTSupplierRegionController extends MTBaseController {
    protected final Logger logger = LoggerFactory.getLogger(getClass());
    @Autowired
    private ApitPurchaseSupplierRegionService apitPurchaseSupplierRegionService;
    /**
     * 区域页面查找
     * @param request
     * @return
     */
    @RequestMapping("/query")
    @ResponseBody
    public ZLResult query(HttpServletRequest request) {
        //获取入参数据
        Map<String, Object> params =  getParams();
        //定义返回对象
        ZLRpcResult zlRpcResult  = new ZLRpcResult();
        //校验参数
        try {

            //系统调用
                zlRpcResult = apitPurchaseSupplierRegionService.queryPageList(params);
        }catch (Exception ex){

            //系统级别异常
            throw new ServiceException(ServiceException.SYS_ERROR);
        }

        //判断返回结果
        if(!zlRpcResult.success()){

            throw  new ServiceException(zlRpcResult.getErrorMsg());
        }

        return   ZLResult.Success(zlRpcResult.getData());
    }


    /**
     * 逻辑删除
     * @param request
     * @return
     */
    @RequestMapping("/delLogic")
    @ResponseBody
    public ZLResult delLogic(HttpServletRequest request) {
        //获取入参数据
        Map<String, Object> params =  getParams();
        //定义返回对象
        ZLRpcResult zlRpcResult  = new ZLRpcResult();
        //校验参数
        try {

            //系统调用
                zlRpcResult = apitPurchaseSupplierRegionService.delLogicObject(params);
        }catch (Exception ex){

            //系统级别异常
            throw new ServiceException(ServiceException.SYS_ERROR);
        }

        //判断返回结果
        if(!zlRpcResult.success()){

            throw  new ServiceException(zlRpcResult.getErrorMsg());
        }

        return   ZLResult.Success(zlRpcResult.getData());
    }

    /**
     * 添加和修改操作
     * @param request
     * @return
     */
    @RequestMapping("/saveOrUpdate")
    @ResponseBody
    public ZLResult update(HttpServletRequest request) {
        //获取入参数据
        Map<String, Object> params =  getParams();
        //定义返回对象
        ZLRpcResult zlRpcResult  = new ZLRpcResult();
        //校验参数
        try {

            //系统调用
                zlRpcResult = apitPurchaseSupplierRegionService.saveOrUpdate(params);
        }catch (Exception ex){

            //系统级别异常
            throw new ServiceException(ex.getMessage());
        }

        //判断返回结果
        if(!zlRpcResult.success()){

            throw  new ServiceException(zlRpcResult.getErrorMsg());
        }

        return   ZLResult.Success(zlRpcResult.getData());
    }

    @RequestMapping("/select")
    @ResponseBody
    public ZLResult select(HttpServletRequest request) {

        //获取入参数据
        Map<String, Object> params =  getParams();
        //定义返回对象
        ZLRpcResult zlRpcResult  = new ZLRpcResult();
        //校验参数
        try {

            //系统调用
                zlRpcResult = apitPurchaseSupplierRegionService.select(params);
        }catch (Exception ex){

            //系统级别异常
            throw new ServiceException(ServiceException.SYS_ERROR);
        }

        //判断返回结果
        if(!zlRpcResult.success()){

            throw  new ServiceException(zlRpcResult.getErrorMsg());
        }

        return   ZLResult.Success(zlRpcResult.getData());
    }

    @RequestMapping("/export")
    @ResponseBody
    public ZLResult export(HttpServletRequest request, HttpServletResponse response) {
        //获取入参数据
        Map<String, Object> params =  getParams();
        //定义返回对象
        ZLRpcResult zlRpcResult  = new ZLRpcResult();
        //校验参数
        try {

            //系统调用
            zlRpcResult = apitPurchaseSupplierRegionService.export(params);

            List<Map<String,Object>> supplierRegionList=zlRpcResult.getList();

            // 字段名数组
            String[] columns = {"regioncode", "regionname", "containnum"};

            // 字段名数组
            String[] columnNames = {"区域编码", "区域名称名称", "包含供应商数量"};

            String fileName = "供应商区域资料";

            ExcelUtil.exportExcel(supplierRegionList, columns, columnNames, fileName, request, response);
        }catch (Exception ex){

            //系统级别异常
            throw new ServiceException(ServiceException.SYS_ERROR);
        }

        //判断返回结果
        if(!zlRpcResult.success()){

            throw  new ServiceException(zlRpcResult.getErrorMsg());
        }

        return   ZLResult.Success(zlRpcResult.getData());
    }
}
