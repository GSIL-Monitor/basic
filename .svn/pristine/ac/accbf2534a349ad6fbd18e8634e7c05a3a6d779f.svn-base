package com.wgb.controller.sp.role;

import com.wgb.bean.ZLResult;
import com.wgb.controller.sp.SPBaseController;
import com.wgb.dao.Page;
import com.wgb.dubbo.ZLRpcResult;
import com.wgb.exception.ServiceException;
import com.wgb.service.dubbo.srvms.web.ApitRoleService;
import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Controller
@RequestMapping("/role")
public class SrvRoleController extends SPBaseController {

    private static final Logger LOGGER = LoggerFactory.getLogger(SrvRoleController.class);

    @Autowired
    private ApitRoleService apitRoleService;

    @RequestMapping("/queryRolePage")
    @ResponseBody
    public ZLResult queryRolePage(HttpServletRequest request) {
        ZLResult result = ZLResult.Success();
        try {
            Map<String, Object> params = getParams();
            ZLRpcResult rpcResult = apitRoleService.queryRolePage(params);
            result = parseRpcResult(rpcResult);
        }catch (Exception e){
            LOGGER.error("查询服务商所有角色系统异常!",e);
            result.setErrorMsg("操作失败，请联系管理员!");
        }
        return result;
    }

    /**
     * 查询当前服务商所有权限
     * @param request
     * @return
     */
    @RequestMapping("/queryRoleList")
    @ResponseBody
    public ZLResult queryRoleList(HttpServletRequest request) {
        ZLResult result = ZLResult.Success();
        try {
            Map<String, Object> params = getParams();
            ZLRpcResult rpcResult = apitRoleService.queryRoleList(params);
            result = parseRpcResult(rpcResult);
        }catch (Exception e){
            LOGGER.error("查询服务商角色系统异常!",e);
            result.setErrorMsg("操作失败，请联系管理员!");
        }
        return result;
    }

    /**
     * 删除用户角色
     * @param request
     * @return
     */
    @RequestMapping("/delRole")
    @ResponseBody
    public ZLResult delRole(HttpServletRequest request) {
        ZLResult result = ZLResult.Success();
        try {
            Map<String, Object> params = getParams();
            ZLRpcResult rpcResult = apitRoleService.delRole(params);
            result = parseRpcResult(rpcResult);
        }catch (Exception e){
            LOGGER.error("删除服务商角色系统异常!",e);
            result.setErrorMsg("操作失败，请联系管理员!");
        }
        return result;
    }

    /**
     * 保存服务商角色
     * @param request
     * @return
     */
    @RequestMapping("/saveRole")
    @ResponseBody
    public ZLResult saveRole(HttpServletRequest request) {
        ZLResult result = ZLResult.Success();
        try {
            Map<String, Object> params = getParams();
            ZLRpcResult rpcResult = apitRoleService.saveRole(params);
            result = parseRpcResult(rpcResult);
        }catch (Exception e){
            LOGGER.error("保存服务商角色系统异常!",e);
            result.setErrorMsg("操作失败，请联系管理员!");
        }
        return result;
    }

    /**
     * 修改服务商角色名称查询角色
     * @param request
     * @return
     */
    @RequestMapping("/queryRoleNameForUpdate")
    @ResponseBody
    public ZLResult queryRoleNameForUpdate(HttpServletRequest request) {
        ZLResult result = ZLResult.Success();
        try {
            Map<String, Object> params = getParams();
            ZLRpcResult rpcResult = apitRoleService.queryRoleNameForUpdate(params);
            result = parseRpcResult(rpcResult);
        }catch (Exception e){
            LOGGER.error("查询服务商角色名称系统异常!",e);
            result.setErrorMsg("操作失败，请联系管理员!");
        }
        return result;
    }

    /**
     * 修改服务商角色名称
     * @param request
     * @return
     */
    @RequestMapping("/updateRole")
    @ResponseBody
    public ZLResult updateRole(HttpServletRequest request) {
        ZLResult result = ZLResult.Success();
        try {
            Map<String, Object> params = getParams();
            ZLRpcResult rpcResult = apitRoleService.updateRole(params);
            result = parseRpcResult(rpcResult);
        }catch (Exception e){
            LOGGER.error("修改服务商角色名称系统异常!",e);
            result.setErrorMsg("操作失败，请联系管理员!");
        }
        return result;
    }
}
